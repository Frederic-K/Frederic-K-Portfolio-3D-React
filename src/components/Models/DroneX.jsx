/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 scene.gltf --transform 
Files: scene.gltf [166.25KB] > C:\Users\frede\OneDrive\Images\3D models\homepage to test\dron\scene-transformed.glb [461.65KB] (-178%)
Author: Villius (https://sketchfab.com/villius12346)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/dron-0e8736c08a31438c8d090ccdcc7d0973
Title: Dron
*/

import React from "react"
import { useRef, useEffect } from "react"
import { useGLTF } from "@react-three/drei"
import { useFrame } from "@react-three/fiber"
import * as THREE from "three"

const DroneX = React.memo(function DroneX({ mousePosition, scale }) {
  const { nodes, materials } = useGLTF("/models/dronex-transformed.glb")
  const groupRef = useRef()
  const initialRotation = new THREE.Euler(0, 0, 0)

  useEffect(() => {
    if (groupRef.current) {
      groupRef.current.rotation.copy(initialRotation)
    }
  }, [])

  useFrame(() => {
    if (groupRef.current && mousePosition) {
      // Calculate target rotation based on mousePosition prop
      // Increased angle by changing Math.PI / 8 to Math.PI / 4
      const targetX = initialRotation.x + (-mousePosition.y * Math.PI) / 4
      const targetY = initialRotation.y + (mousePosition.x * Math.PI) / 4

      // Smoothly interpolate current rotation to target rotation
      // Increased speed by changing 0.02 to 0.05
      groupRef.current.rotation.x = THREE.MathUtils.lerp(groupRef.current.rotation.x, targetX, 0.05)
      groupRef.current.rotation.y = THREE.MathUtils.lerp(groupRef.current.rotation.y, targetY, 0.05)
    }
  })

  return (
    <group ref={groupRef} dispose={null} scale={scale} rotation={[0, Math.PI, 0]}>
      <mesh
        geometry={nodes.Object_4.geometry}
        material={materials.PaletteMaterial001}
        rotation={[Math.PI / 2, -Math.PI / 2, 0]}
      />
      <mesh
        geometry={nodes.Object_8.geometry}
        material={materials.PaletteMaterial002}
        position={[-0.203, -0.19, -3.096]}
        rotation={[0, Math.PI / 2, 0]}
      />
      <mesh
        geometry={nodes.Object_9.geometry}
        material={materials.PaletteMaterial003}
        position={[-0.203, -0.19, -3.096]}
        rotation={[0, Math.PI / 2, 0]}
      />
      <mesh
        geometry={nodes.Object_13.geometry}
        material={materials.PaletteMaterial004}
        rotation={[Math.PI / 2, -Math.PI / 2, 0]}
      />
      <mesh
        geometry={nodes.Object_55.geometry}
        material={materials.PaletteMaterial005}
        position={[-0.596, 0.582, -0.81]}
        rotation={[1.018, 0.708, -1.189]}
      />
    </group>
  )
})

export default DroneX
useGLTF.preload("/models/dronex-transformed.glb")
